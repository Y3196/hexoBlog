{"remainingRequest":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\sourceCode\\Backend\\blog-master\\blog-vue\\admin\\src\\views\\login\\Login.vue?vue&type=style&index=0&id=2529d779&scoped=true&lang=css","dependencies":[{"path":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\admin\\src\\views\\login\\Login.vue","mtime":1724310060849},{"path":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\admin\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5sb2dpbi1jb250YWluZXIgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB0b3A6IDA7CiAgYm90dG9tOiAwOwogIHJpZ2h0OiAwOwogIGxlZnQ6IDA7CiAgYmFja2dyb3VuZDogdXJsKGh0dHBzOi8vYmxvZy1mZWxpeC5vc3MtY24tYmVpamluZy5hbGl5dW5jcy5jb20vYXJ0aWNsZXMvYmVpamluZy5qcGcpIGNlbnRlciBjZW50ZXIgLwogICAgY292ZXIgbm8tcmVwZWF0Owp9Ci5sb2dpbi1jYXJkIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiAwOwogIGJvdHRvbTogMDsKICByaWdodDogMDsKICBiYWNrZ3JvdW5kOiAjZmZmOwogIHBhZGRpbmc6IDE3MHB4IDYwcHggMTgwcHg7CiAgd2lkdGg6IDM1MHB4Owp9Ci5sb2dpbi10aXRsZSB7CiAgY29sb3I6ICMzMDMxMzM7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgZm9udC1zaXplOiAxcmVtOwp9Ci5sb2dpbi1mb3JtIHsKICBtYXJnaW4tdG9wOiAxLjJyZW07Cn0KLmxvZ2luLWNhcmQgYnV0dG9uIHsKICBtYXJnaW4tdG9wOiAxcmVtOwogIHdpZHRoOiAxMDAlOwp9Cg=="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";AAsGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views/login","sourcesContent":["<template>\n  <div class=\"login-container\">\n    <div class=\"login-card\">\n      <div class=\"login-title\">管理员登录</div>\n      <!-- 登录表单 -->\n      <el-form\n        status-icon\n        :model=\"loginForm\"\n        :rules=\"rules\"\n        ref=\"ruleForm\"\n        class=\"login-form\"\n      >\n        <!-- 用户名输入框 -->\n        <el-form-item prop=\"username\">\n          <el-input\n            v-model=\"loginForm.username\"\n            prefix-icon=\"el-icon-user-solid\"\n            placeholder=\"用户名\"\n            @keyup.enter.native=\"login\"\n          />\n        </el-form-item>\n        <!-- 密码输入框 -->\n        <el-form-item prop=\"password\">\n          <el-input\n            v-model=\"loginForm.password\"\n            prefix-icon=\"iconfont el-icon-mymima\"\n            show-password\n            placeholder=\"密码\"\n            @keyup.enter.native=\"login\"\n          />\n        </el-form-item>\n      </el-form>\n      <!-- 登录按钮 -->\n      <el-button type=\"primary\" @click=\"login\">登录</el-button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { generaMenu } from \"../../assets/js/menu\";\nexport default {\n  data: function() {\n    return {\n      loginForm: {\n        username: \"\",\n        password: \"\"\n      },\n      rules: {\n        username: [\n          { required: true, message: \"用户名不能为空\", trigger: \"blur\" }\n        ],\n        password: [{ required: true, message: \"密码不能为空\", trigger: \"blur\" }]\n      }\n    };\n  },\n  methods: {\n    login() {\n      this.$refs.ruleForm.validate(valid => {\n        if (valid) {\n          const that = this;\n          // eslint-disable-next-line no-undef\n          var captcha = new TencentCaptcha(\n            this.config.TENCENT_CAPTCHA,\n            function(res) {\n              if (res.ret === 0) {\n                //发送登录请求\n                let param = new URLSearchParams();\n                param.append(\"username\", that.loginForm.username);\n                param.append(\"password\", that.loginForm.password);\n                that.axios.post(\"/api/login\", param).then(({ data }) => {\n                  console.log(\"后端返回的数据\",data.user)\n                  if (data.token) {\n                    localStorage.setItem(\"token\", data.token);\n                    // 登录后保存用户信息\n                    // 提交用户数据到 Vuex\n                    that.$store.commit(\"setToken\", data.token);\n                    that.$store.commit(\"login\", data.user);\n                    // 确认 generaMenu 函数被调用\n                    console.log('Calling generaMenu...');\n                    // 加载用户菜单\n                    generaMenu();\n                    that.$message.success(\"登录成功\");\n                    that.$router.push({ path: \"/\" });\n                  } else {\n                    that.$message.error(data.message);\n                  }\n                });\n              }\n            }\n          );\n          // 显示验证码\n          captcha.show();\n        } else {\n          return false;\n        }\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.login-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  background: url(https://blog-felix.oss-cn-beijing.aliyuncs.com/articles/beijing.jpg) center center /\n    cover no-repeat;\n}\n.login-card {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  background: #fff;\n  padding: 170px 60px 180px;\n  width: 350px;\n}\n.login-title {\n  color: #303133;\n  font-weight: bold;\n  font-size: 1rem;\n}\n.login-form {\n  margin-top: 1.2rem;\n}\n.login-card button {\n  margin-top: 1rem;\n  width: 100%;\n}\n</style>\n"]}]}