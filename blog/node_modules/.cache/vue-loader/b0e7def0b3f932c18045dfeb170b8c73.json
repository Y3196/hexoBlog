{"remainingRequest":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\src\\components\\model\\EmailModel.vue?vue&type=style&index=0&id=61cfb243&scoped=true&lang=css&","dependencies":[{"path":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\src\\components\\model\\EmailModel.vue","mtime":1723798256974},{"path":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBtZWRpYSAobWluLXdpZHRoOiA3NjBweCkgewogIC5sb2dpbi1jb250YWluZXIgewogICAgcGFkZGluZzogMXJlbTsKICAgIGJvcmRlci1yYWRpdXM6IDRweDsKICAgIGhlaWdodDogNDAwcHg7CiAgfQp9Cg=="},{"version":3,"sources":["EmailModel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgKA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EmailModel.vue","sourceRoot":"src/components/model","sourcesContent":["<template>\n  <v-dialog v-model=\"emailFlag\" :fullscreen=\"isMobile\" max-width=\"460\">\n    <v-card class=\"login-container\" style=\"border-radius:4px\">\n      <v-icon class=\"float-right\" @click=\"emailFlag = false\">\n        mdi-close\n      </v-icon>\n      <div class=\"login-wrapper\">\n        <!-- 用户名 -->\n        <v-text-field\n            v-model=\"email\"\n            label=\"邮箱号\"\n            placeholder=\"请输入您的邮箱号\"\n            clearable\n            @keyup.enter=\"register\"\n        />\n        <!-- 验证码 -->\n        <div class=\"mt-7 send-wrapper\">\n          <v-text-field\n              maxlength=\"6\"\n              v-model=\"code\"\n              label=\"验证码\"\n              placeholder=\"请输入6位验证码\"\n              @keyup.enter=\"register\"\n          />\n          <v-btn text small :disabled=\"flag\" @click=\"sendCode\">\n            {{ codeMsg }}\n          </v-btn>\n        </div>\n        <!-- 按钮 -->\n        <v-btn\n            class=\"mt-7\"\n            block\n            color=\"blue\"\n            style=\"color:#fff\"\n            @click=\"saveUserEmail\"\n        >\n          绑定\n        </v-btn>\n      </div>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nexport default {\n  data: function() {\n    return {\n      email: this.$store.state.email,\n      code: \"\",\n      flag: true,\n      codeMsg: \"发送\",\n      time: 60,\n      show: false\n    };\n  },\n  methods: {\n    sendCode() {\n      const that = this;\n      // eslint-disable-next-line no-undef\n      var captcha = new TencentCaptcha(this.config.TENCENT_CAPTCHA, function(\n          res\n      ) {\n        if (res.ret === 0) {\n          // 发送验证码请求\n          that.countDown();\n          that.axios\n              .get(\"/api/users/code\", {\n                params: { username: that.email }\n              })\n              .then(({ data }) => {\n                if (data.flag) {\n                  that.$toast({ type: \"success\", message: data.message });\n                } else {\n                  that.$toast({ type: \"error\", message: data.message });\n                }\n              })\n              .catch((error) => {\n                that.$toast({ type: \"error\", message: \"发送验证码失败\" });\n                console.error(\"发送验证码请求失败:\", error);\n              });\n        }\n      });\n      // 显示验证码\n      captcha.show();\n    },\n    countDown() {\n      this.flag = true;\n      this.timer = setInterval(() => {\n        this.time--;\n        this.codeMsg = this.time + \"s\";\n        if (this.time <= 0) {\n          clearInterval(this.timer);\n          this.codeMsg = \"发送\";\n          this.time = 60;\n          this.flag = false;\n        }\n      }, 1000);\n    },\n    saveUserEmail() {\n      var reg = /^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\n      if (!reg.test(this.email)) {\n        this.$toast({ type: \"error\", message: \"邮箱格式不正确\" });\n        return false;\n      }\n      if (this.code.trim().length != 6) {\n        this.$toast({ type: \"error\", message: \"请输入6位验证码\" });\n        return false;\n      }\n      const user = {\n        email: this.email,\n        code: this.code\n      };\n      console.log(\"Request data:\", user);\n      const token = this.$store.state.token || localStorage.getItem('token');\n      this.axios.post(\"/api/users/email\", user, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(({ data }) => {\n        console.log(\"Response data:\", data); // 确保这里能正确打印出返回的数据\n        if (data.message === \"success\") { // 修改为正确的判断条件\n          this.$store.commit(\"saveEmail\", this.email);\n          this.email = \"\";\n          this.code = \"\";\n          this.$store.commit(\"closeModel\");\n          this.$toast({ type: \"success\", message: data.message });\n        } else {\n          this.$toast({ type: \"error\", message: data.message });\n        }\n      }).catch(error => {\n        console.error(\"请求失败:\", error);\n        this.$toast({ type: \"error\", message: \"请求失败，请稍后重试\" });\n      });\n    }\n  },\n  computed: {\n    emailFlag: {\n      set(value) {\n        this.$store.state.emailFlag = value;\n      },\n      get() {\n        return this.$store.state.emailFlag;\n      }\n    },\n\n    isMobile() {\n      const clientWidth = document.documentElement.clientWidth;\n      return clientWidth <= 960;\n    }\n  },\n  watch: {\n    email(value) {\n      var reg = /^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\n      this.flag = !reg.test(value);\n    }\n  }\n};\n</script>\n\n<style scoped>\n@media (min-width: 760px) {\n  .login-container {\n    padding: 1rem;\n    border-radius: 4px;\n    height: 400px;\n  }\n}\n</style>\n"]}]}