{"remainingRequest":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\src\\components\\ChatRoom.vue?vue&type=template&id=56c7db03&scoped=true&","dependencies":[{"path":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\src\\components\\ChatRoom.vue","mtime":1700909738000},{"path":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}