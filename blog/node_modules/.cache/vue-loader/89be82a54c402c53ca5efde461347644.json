{"remainingRequest":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\src\\components\\Comment.vue?vue&type=style&index=0&id=133ed8df&scoped=true&lang=css&","dependencies":[{"path":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\src\\components\\Comment.vue","mtime":1723689275581},{"path":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmJsb2dnZXItdGFnIHsKICBiYWNrZ3JvdW5kOiAjZmZhNTFlOwogIGZvbnQtc2l6ZTogMTJweDsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgYm9yZGVyLXJhZGl1czogMnB4OwogIGNvbG9yOiAjZmZmOwogIHBhZGRpbmc6IDAgNXB4OwogIG1hcmdpbi1sZWZ0OiA2cHg7Cn0KCi5jb21tZW50LXRpdGxlIHsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgZm9udC1zaXplOiAxLjI1cmVtOwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIGxpbmUtaGVpZ2h0OiA0MHB4OwogIG1hcmdpbi1ib3R0b206IDEwcHg7Cn0KCi5jb21tZW50LXRpdGxlIGkgewogIGZvbnQtc2l6ZTogMS41cmVtOwogIG1hcmdpbi1yaWdodDogNXB4Owp9CgouY29tbWVudC1pbnB1dC13cmFwcGVyIHsKICBib3JkZXI6IDFweCBzb2xpZCAjOTA5Mzk5NTA7CiAgYm9yZGVyLXJhZGl1czogNHB4OwogIHBhZGRpbmc6IDEwcHg7CiAgbWFyZ2luOiAwIDAgMTBweDsKfQoKLmNvdW50IHsKICBwYWRkaW5nOiA1cHg7CiAgbGluZS1oZWlnaHQ6IDEuNzU7CiAgZm9udC1zaXplOiAxLjI1cmVtOwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9CgouY29tbWVudC1tZXRhIHsKICBtYXJnaW4tbGVmdDogMC44cmVtOwogIHdpZHRoOiAxMDAlOwogIGJvcmRlci1ib3R0b206IDFweCBkYXNoZWQgI2Y1ZjVmNTsKfQoKLnJlcGx5LW1ldGEgewogIG1hcmdpbi1sZWZ0OiAwLjhyZW07CiAgd2lkdGg6IDEwMCU7Cn0KCi5jb21tZW50LXVzZXIgewogIGZvbnQtc2l6ZTogMTRweDsKICBsaW5lLWhlaWdodDogMS43NTsKfQoKLmNvbW1lbnQtdXNlciBhIHsKICBjb2xvcjogIzFhYmM5YyAhaW1wb3J0YW50OwogIGZvbnQtd2VpZ2h0OiA1MDA7CiAgdHJhbnNpdGlvbjogMC4zcyBhbGw7Cn0KCi5jb21tZW50LW5pY2tuYW1lIHsKICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgY29sb3I6ICMxYWJjOWMgIWltcG9ydGFudDsKICBmb250LXdlaWdodDogNTAwOwp9CgouY29tbWVudC1pbmZvIHsKICBsaW5lLWhlaWdodDogMS43NTsKICBmb250LXNpemU6IDAuNzVyZW07CiAgY29sb3I6ICNiM2IzYjM7Cn0KCi5yZXBseS1idG4gewogIGN1cnNvcjogcG9pbnRlcjsKICBmbG9hdDogcmlnaHQ7CiAgY29sb3I6ICNlZjJmMTE7Cn0KCi5jb21tZW50LWNvbnRlbnQgewogIGZvbnQtc2l6ZTogMC44NzVyZW07CiAgbGluZS1oZWlnaHQ6IDEuNzU7CiAgcGFkZGluZy10b3A6IDAuNjI1cmVtOwogIHdoaXRlLXNwYWNlOiBwcmUtbGluZTsKICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7CiAgd29yZC1icmVhazogYnJlYWstYWxsOwp9CgouY29tbWVudC1hdmF0YXIgewogIHRyYW5zaXRpb246IGFsbCAwLjVzOwp9CgouY29tbWVudC1hdmF0YXI6aG92ZXIgewogIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7Cn0KCi5saWtlIHsKICBjdXJzb3I6IHBvaW50ZXI7CiAgZm9udC1zaXplOiAwLjg3NXJlbTsKfQoKLmxpa2U6aG92ZXIgewogIGNvbG9yOiAjZWI1MDU1Owp9CgoubGlrZS1hY3RpdmUgewogIGN1cnNvcjogcG9pbnRlcjsKICBmb250LXNpemU6IDAuODc1cmVtOwogIGNvbG9yOiAjZWI1MDU1Owp9CgoubG9hZC13cmFwcGVyIHsKICBtYXJnaW4tdG9wOiAxMHB4OwogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKfQoKLmxvYWQtd3JhcHBlciBidXR0b24gewogIGJhY2tncm91bmQtY29sb3I6ICM0OWIxZjU7CiAgY29sb3I6ICNmZmY7Cn0K"},{"version":3,"sources":["Comment.vue"],"names":[],"mappingskffile":"Comment.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div class=\"comment-title\"><i class=\"iconfont iconpinglunzu\"/>评论</div>\n    <!-- 评论框 -->\n    <div class=\"comment-input-wrapper\">\n      <div style=\"display:flex\">\n        <v-avatar size=\"40\">\n          <img\n              v-if=\"this.$store.state.avatar\"\n              :src=\"this.$store.state.avatar\"\n          />\n          <img\n              v-else\n              :src=\"this.$store.state.blogInfo.websiteConfig.touristAvatar\"\n          />\n        </v-avatar>\n        <div style=\"width:100%\" class=\"ml-3\">\n          <div class=\"comment-input\">\n            <textarea\n                class=\"comment-textarea\"\n                v-model=\"commentContent\"\n                placeholder=\"留下点什么吧...\"\n                auto-grow\n                dense\n            />\n          </div>\n          <!-- 操作按钮 -->\n          <div class=\"emoji-container\">\n            <span\n                :class=\"chooseEmoji ? 'emoji-btn-active' : 'emoji-btn'\"\n                @click=\"chooseEmoji = !chooseEmoji\"\n            >\n              <i class=\"iconfont iconbiaoqing\"/>\n            </span>\n            <button\n                @click=\"insertComment\"\n                class=\"upload-btn v-comment-btn\"\n                style=\"margin-left:auto\"\n            >\n              提交\n            </button>\n          </div>\n          <!-- 表情框 -->\n          <emoji @addEmoji=\"addEmoji\" :chooseEmoji=\"chooseEmoji\"/>\n        </div>\n      </div>\n    </div>\n    <!-- 评论详情 -->\n    <div v-if=\"count > 0 && reFresh\">\n      <!-- 评论数量 -->\n      <div class=\"count\">{{ count }} 评论</div>\n      <!-- 评论列表 -->\n      <div\n          style=\"display:flex\"\n          class=\"pt-5\"\n          v-for=\"(item, index) of commentList\"\n          :key=\"item.id\"\n      >\n        <!-- 头像 -->\n        <v-avatar size=\"40\" class=\"comment-avatar\">\n          <img :src=\"item.avatar\"/>\n        </v-avatar>\n        <div class=\"comment-meta\">\n          <!-- 用户名 -->\n          <div class=\"comment-user\">\n            <span v-if=\"!item.webSite\">{{ item.nickname }}</span>\n            <a v-else :href=\"item.webSite\" target=\"_blank\">\n              {{ item.nickname }}\n            </a>\n            <span class=\"blogger-tag\" v-if=\"item.userId == 1\">博主</span>\n          </div>\n          <!-- 信息 -->\n          <div class=\"comment-info\">\n            <!-- 楼层 -->\n            <span style=\"margin-right:10px\">{{ count - index }}楼</span>\n            <!-- 发表时间 -->\n            <span style=\"margin-right:10px\">{{ item.createTime | date }}</span>\n            <!-- 点赞 -->\n            <span\n                :class=\"isLike(item.id) + ' iconfont icondianzan'\"\n                @click=\"like(item)\"\n            />\n            <span v-show=\"item.likeCount > 0\"> {{ item.likeCount }}</span>\n            <!-- 回复 -->\n            <span class=\"reply-btn\" @click=\"replyComment(index, item)\">\n              回复\n            </span>\n          </div>\n          <!-- 评论内容 -->\n          <p v-html=\"item.commentContent\" class=\"comment-content\"></p>\n          <!-- 回复人 -->\n          <div\n              style=\"display:flex\"\n              v-for=\"reply of item.replyDTOList\"\n              :key=\"reply.id\"\n          >\n            <!-- 头像 -->\n            <v-avatar size=\"36\" class=\"comment-avatar\">\n              <img :src=\"reply.avatar\"/>\n            </v-avatar>\n            <div class=\"reply-meta\">\n              <!-- 用户名 -->\n              <div class=\"comment-user\">\n                <span v-if=\"!reply.webSite\">{{ reply.nickname }}</span>\n                <a v-else :href=\"reply.webSite\" target=\"_blank\">\n                  {{ reply.nickname }}\n                </a>\n                <span class=\"blogger-tag\" v-if=\"reply.userId == 1\">博主</span>\n              </div>\n              <!-- 信息 -->\n              <div class=\"comment-info\">\n                <!-- 发表时间 -->\n                <span style=\"margin-right:10px\">\n                  {{ reply.createTime | date }}\n                </span>\n                <!-- 点赞 -->\n                <span\n                    :class=\"isLike(reply.id) + ' iconfont icondianzan'\"\n                    @click=\"like(reply)\"\n                />\n                <span v-show=\"reply.likeCount > 0\"> {{ reply.likeCount }}</span>\n                <!-- 回复 -->\n                <span class=\"reply-btn\" @click=\"replyComment(index, reply)\">\n                  回复\n                </span>\n              </div>\n              <!-- 回复内容 -->\n              <p class=\"comment-content\">\n                <!-- 回复用户名 -->\n                <template v-if=\"reply.replyUserId != item.userId\">\n                  <span v-if=\"!reply.replyWebSite\" class=\"ml-1\">\n                    @{{ reply.replyNickname }}\n                  </span>\n                  <a\n                      v-else\n                      :href=\"reply.replyWebSite\"\n                      target=\"_blank\"\n                      class=\"comment-nickname ml-1\"\n                  >\n                    @{{ reply.replyNickname }}\n                  </a>\n                  ，\n                </template>\n                <span v-html=\"reply.commentContent\"/>\n              </p>\n            </div>\n          </div>\n          <!-- 回复数量 -->\n          <div\n              class=\"mb-3\"\n              style=\"font-size:0.75rem;color:#6d757a\"\n              v-show=\"item.replyCount > 3\"\n              ref=\"check\"\n          >\n            共\n            <b>{{ item.replyCount }}</b>\n            条回复，\n            <span\n                style=\"color:#00a1d6;cursor:pointer\"\n                @click=\"checkReplies(index, item)\"\n            >\n              点击查看\n            </span>\n          </div>\n          <!-- 回复分页 -->\n          <div\n              class=\"mb-3\"\n              style=\"font-size:0.75rem;color:#222;display:none\"\n              ref=\"paging\"\n          >\n            <span style=\"padding-right:10px\">\n              共{{ Math.ceil(item.replyCount / 5) }}页\n            </span>\n            <paging\n                ref=\"page\"\n                :totalPage=\"Math.ceil(item.replyCount / 5)\"\n                :index=\"index\"\n                :commentId=\"item.id\"\n                @changeReplyCurrent=\"changeReplyCurrent\"\n            />\n          </div>\n          <!-- 回复框 -->\n          <Reply :type=\"type\" ref=\"reply\" @reloadReply=\"reloadReply\"/>\n        </div>\n      </div>\n      <!-- 加载按钮 -->\n      <div class=\"load-wrapper\">\n        <v-btn outlined v-if=\"count > commentList.length\" @click=\"listComments\">\n          加载更多...\n        </v-btn>\n      </div>\n    </div>\n    <!-- 没有评论提示 -->\n    <div v-else style=\"padding:1.25rem;text-align:center\">\n      来发评论吧~\n    </div>\n  </div>\n</template>\n\n<script>\nimport Reply from \"./Reply\";\nimport Paging from \"./Paging\";\nimport Emoji from \"./Emoji\";\nimport EmojiList from \"../assets/js/emoji\";\n\nexport default {\n  components: {\n    Reply,\n    Emoji,\n    Paging\n  },\n  props: {\n    type: {\n      type: Number\n    }\n  },\n  created() {\n    //  console.log('Component mounted, fetching comments...');\n    this.listComments();\n  },\n  data: function () {\n    return {\n      reFresh: true,\n      commentContent: \"\",\n      chooseEmoji: false,\n      current: 1,\n      commentList: [],\n      count: 0\n    };\n  },\n  methods: {\n    replyComment(index, item) {\n      this.$refs.reply.forEach(item => {\n        item.$el.style.display = \"none\";\n      });\n      //传值给回复框\n      this.$refs.reply[index].commentContent = \"\";\n      this.$refs.reply[index].nickname = item.nickname;\n      this.$refs.reply[index].replyUserId = item.userId;\n      this.$refs.reply[index].parentId = this.commentList[index].id;\n      this.$refs.reply[index].chooseEmoji = false;\n      this.$refs.reply[index].index = index;\n      this.$refs.reply[index].$el.style.display = \"block\";\n    },\n    addEmoji(key) {\n      this.commentContent += key;\n    },\n    checkReplies(index, item) {\n      this.axios\n          .get(\"/api/comments/\" + item.id + \"/replies\", {\n            params: {current: 1, size: 5}\n          })\n          .then(({data}) => {\n            this.$refs.check[index].style.display = \"none\";\n            item.replyDTOList = data.data;\n            //超过1页才显示分页\n            if (Math.ceil(item.replyCount / 5) > 1) {\n              this.$refs.paging[index].style.display = \"flex\";\n            }\n          });\n    },\n    changeReplyCurrent(current, index, commentId) {\n      //查看下一页回复\n      this.axios\n          .get(\"/api/comments/\" + commentId + \"/replies\", {\n            params: {current: current, size: 5}\n          })\n          .then(({data}) => {\n            this.commentList[index].replyDTOList = data.data;\n          });\n    },\n\n    listComments() {\n      const path = this.$route.path;\n      const arr = path.split(\"/\");\n      const param = {\n        current: this.current,\n        type: this.type,\n        size: 10,\n        _timestamp: new Date().getTime(),\n        topicId: this.type === 1 || this.type === 3 ? arr[2] : undefined\n      };\n\n      //console.log(\"请求参数：\", param);\n\n      const token = this.$store.state.token || localStorage.getItem('token');\n      this.axios.get(\"/api/comments\", {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        params: param\n      }).then(({data}) => {\n//        console.log(\"获取的评论数据：\", data.data.recordList);\n\n        if (data.data && data.data.recordList.length > 0) {\n          const transformedComments = data.data.recordList.map(comment => ({\n            id: comment.id,\n            userId: comment.userId,\n            nickname: comment.nickname,\n            avatar: comment.avatar,\n            commentContent: comment.commentContent,\n            createTime: comment.createTime,\n            likeCount: comment.likeCount,\n            replyCount: comment.replyCount,\n            replyDTOList: comment.replyDTOList || []\n          }));\n\n          if (this.current === 1) {\n            this.commentList = transformedComments;\n          } else {\n            this.commentList.push(...transformedComments);\n          }\n          this.current++;\n          this.count = data.data.count;\n          this.$emit(\"getCommentCount\", this.count);\n\n          this.$nextTick(() => {\n            console.log(\"评论列表更新完成：\", this.commentList);\n          });\n        } else {\n          console.warn(\"没有获取到评论数据，recordList 为空。\");\n        }\n      }).catch(error => {\n        console.error(\"请求评论数据时出错：\", error);\n      });\n    }\n\n    ,\n    insertComment() {\n      const token = this.$store.state.token || localStorage.getItem('token');\n      if (!this.$store.state.userId) {\n        console.log('User ID is not set, setting loginFlag to true');\n        this.$store.state.loginFlag = true;\n        this.$toast({type: \"error\", message: \"请先登录\"});\n        return false;\n      }\n\n      if (this.commentContent.trim() === \"\") {\n        this.$toast({type: \"error\", message: \"评论不能为空\"});\n        return false;\n      }\n\n      const reg = /\\[.+?\\]/g;\n      const formattedContent = this.commentContent.replace(reg, (str) => {\n        return (\n            \"<img src='\" +\n            EmojiList[str] +\n            \"' width='24' height='24' style='margin: 0 1px; vertical-align: text-bottom'/>\"\n        );\n      });\n\n      const path = this.$route.path;\n      const arr = path.split(\"/\");\n      const comment = {\n        commentContent: formattedContent,\n        type: this.type\n      };\n      if (this.type === 1 || this.type === 3) {\n        comment.topicId = arr[2];\n      }\n\n      //console.log(\"提交的评论数据：\", comment);\n\n      this.axios.post(\"/api/comments\", comment, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(({data}) => {\n        console.log(\"评论提交响应：\", data);\n\n        if (data.data && data.data.recordList && data.data.recordList.length) {\n          const newComment = data.data.recordList.map(comment => ({\n            id: comment.id,\n            userId: comment.userId,\n            nickname: comment.nickname,\n            avatar: comment.avatar,\n            commentContent: comment.commentContent,\n            createTime: comment.createTime,\n            likeCount: comment.likeCount,\n            replyCount: comment.replyCount,\n            replyDTOList: comment.replyDTOList || []\n          }))[0]; // 获取新评论\n\n          this.commentList.unshift(newComment); // 将新评论添加到列表的顶部\n\n          this.commentContent = \"\";\n\n          this.count++;\n          this.$emit(\"getCommentCount\", this.count);\n\n          const isReview = this.$store.state.blogInfo.websiteConfig.isCommentReview;\n          if (isReview) {\n            this.$toast({type: \"warning\", message: \"评论成功，正在审核中\"});\n          } else {\n            this.$toast({type: \"success\", message: \"评论成功\"});\n          }\n        } else {\n          this.$toast({type: \"error\", message: \"评论提交失败\"});\n        }\n      }).catch(error => {\n        console.error(\"提交评论时出错：\", error);\n        this.$toast({type: \"error\", message: \"评论提交失败，请稍后再试\"});\n      });\n    }\n\n    ,\n    like(comment) {\n      // 判断是否已登录\n      if (!this.$store.state.userId) {\n        this.$toast({type: \"error\", message: \"请先登录\"});\n        this.$store.state.loginFlag = true;\n        return false;\n      }\n      const token = this.$store.state.token || localStorage.getItem('token');\n\n      // 发送请求\n      this.axios\n          .post(`/api/comments/${comment.id}/like`, {}, {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            },\n          })\n          .then(({data}) => {\n            if (data.flag) {\n              const newLikeCount = data.data; // 后端返回的新点赞数量\n              this.$set(comment, \"likeCount\", newLikeCount); // 更新点赞数量\n\n              // 更新 Vuex 中的点赞状态\n              if (this.$store.state.commentLikeSet.includes(comment.id.toString())) {\n                this.$store.commit(\"commentLike\", comment.id); // 取消点赞\n              } else {\n                this.$store.commit(\"commentLike\", comment.id); // 点赞\n              }\n            }\n          })\n          .catch(error => {\n            console.error(\"Error processing like:\", error);\n          });\n    }\n\n    ,\n    reloadReply(index) {\n      const token = this.$store.state.token || localStorage.getItem('token');\n      this.axios\n          .get(\"/api/comments/\" + this.commentList[index].id + \"/replies\", {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            },\n            params: {\n              current: 1,\n              size: 5\n            }\n          })\n          .then(({data}) => {\n            console.log(\"Replies data:\", data); // Debug log\n            if (data.flag && data.data) {\n              // 更新 replyDTOList\n              this.$set(this.commentList[index], 'replyDTOList', data.data);\n\n              this.commentList[index].replyCount = data.data.length;\n\n              // 更新分页按钮\n              this.$nextTick(() => {\n                if (this.commentList[index].replyCount > 5) {\n                  this.$refs.paging[index].style.display = \"flex\";\n                }\n                this.$refs.check[index].style.display = \"none\";\n                this.$refs.reply[index].$el.style.display = \"none\";\n              });\n            } else {\n              console.error(\"Failed to load replies:\", data.message || \"Unknown error\");\n            }\n          }).catch(error => {\n        console.error(\"Error loading replies:\", error); // Add this line\n      });\n    }\n  },\n  computed: {\n    isLike() {\n      return (commentId) => {\n        var commentLikeSet = this.$store.state.commentLikeSet;\n        return commentLikeSet.indexOf(commentId.toString()) !== -1 ? \"like-active\" : \"like\";\n      };\n    }\n  },\n  watch: {\n    commentList() {\n      console.log('CommentList updated in watcher:', this.commentList);\n      this.reFresh = false;\n      this.$nextTick(() => {\n        this.reFresh = true;\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.blogger-tag {\n  background: #ffa51e;\n  font-size: 12px;\n  display: inline-block;\n  border-radius: 2px;\n  color: #fff;\n  padding: 0 5px;\n  margin-left: 6px;\n}\n\n.comment-title {\n  display: flex;\n  align-items: center;\n  font-size: 1.25rem;\n  font-weight: bold;\n  line-height: 40px;\n  margin-bottom: 10px;\n}\n\n.comment-title i {\n  font-size: 1.5rem;\n  margin-right: 5px;\n}\n\n.comment-input-wrapper {\n  border: 1px solid #90939950;\n  border-radius: 4px;\n  padding: 10px;\n  margin: 0 0 10px;\n}\n\n.count {\n  padding: 5px;\n  line-height: 1.75;\n  font-size: 1.25rem;\n  font-weight: bold;\n}\n\n.comment-meta {\n  margin-left: 0.8rem;\n  width: 100%;\n  border-bottom: 1px dashed #f5f5f5;\n}\n\n.reply-meta {\n  margin-left: 0.8rem;\n  width: 100%;\n}\n\n.comment-user {\n  font-size: 14px;\n  line-height: 1.75;\n}\n\n.comment-user a {\n  color: #1abc9c !important;\n  font-weight: 500;\n  transition: 0.3s all;\n}\n\n.comment-nickname {\n  text-decoration: none;\n  color: #1abc9c !important;\n  font-weight: 500;\n}\n\n.comment-info {\n  line-height: 1.75;\n  font-size: 0.75rem;\n  color: #b3b3b3;\n}\n\n.reply-btn {\n  cursor: pointer;\n  float: right;\n  color: #ef2f11;\n}\n\n.comment-content {\n  font-size: 0.875rem;\n  line-height: 1.75;\n  padding-top: 0.625rem;\n  white-space: pre-line;\n  word-wrap: break-word;\n  word-break: break-all;\n}\n\n.comment-avatar {\n  transition: all 0.5s;\n}\n\n.comment-avatar:hover {\n  transform: rotate(360deg);\n}\n\n.like {\n  cursor: pointer;\n  font-size: 0.875rem;\n}\n\n.like:hover {\n  color: #eb5055;\n}\n\n.like-active {\n  cursor: pointer;\n  font-size: 0.875rem;\n  color: #eb5055;\n}\n\n.load-wrapper {\n  margin-top: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.load-wrapper button {\n  background-color: #49b1f5;\n  color: #fff;\n}\n</style>\n"]}]}