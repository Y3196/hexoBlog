{"remainingRequest":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\node_modules\\babel-loader\\lib\\index.js!E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\src\\components\\Comment.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\src\\components\\Comment.vue","mtime":1724165127715},{"path":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\sourceCode\\Backend\\blog-master\\blog-vue\\blog\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Comment.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"comment-title\"><i class=\"iconfont iconpinglunzu\"/>评论</div>\n    <!-- 评论框 -->\n    <div class=\"comment-input-wrapper\">\n      <div style=\"display:flex\">\n        <v-avatar size=\"40\">\n          <img\n              v-if=\"this.$store.state.avatar\"\n              :src=\"this.$store.state.avatar\"\n          />\n          <img\n              v-else\n              :src=\"this.$store.state.blogInfo.websiteConfig.touristAvatar\"\n          />\n        </v-avatar>\n        <div style=\"width:100%\" class=\"ml-3\">\n          <div class=\"comment-input\">\n            <textarea\n                class=\"comment-textarea\"\n                v-model=\"commentContent\"\n                placeholder=\"留下点什么吧...\"\n                auto-grow\n                dense\n            />\n          </div>\n          <!-- 操作按钮 -->\n          <div class=\"emoji-container\">\n            <span\n                :class=\"chooseEmoji ? 'emoji-btn-active' : 'emoji-btn'\"\n                @click=\"chooseEmoji = !chooseEmoji\"\n            >\n              <i class=\"iconfont iconbiaoqing\"/>\n            </span>\n            <button\n                @click=\"insertComment\"\n                class=\"upload-btn v-comment-btn\"\n                style=\"margin-left:auto\"\n            >\n              提交\n            </button>\n          </div>\n          <!-- 表情框 -->\n          <emoji @addEmoji=\"addEmoji\" :chooseEmoji=\"chooseEmoji\"/>\n        </div>\n      </div>\n    </div>\n    <!-- 评论详情 -->\n    <div v-if=\"count > 0 && reFresh\">\n      <!-- 评论数量 -->\n      <div class=\"count\">{{ count }} 评论</div>\n      <!-- 评论列表 -->\n      <div\n          style=\"display:flex\"\n          class=\"pt-5\"\n          v-for=\"(item, index) of commentList\"\n          :key=\"item.id\"\n      >\n        <!-- 头像 -->\n        <v-avatar size=\"40\" class=\"comment-avatar\">\n          <img :src=\"item.avatar\"/>\n        </v-avatar>\n        <div class=\"comment-meta\">\n          <!-- 用户名 -->\n          <div class=\"comment-user\">\n            <span v-if=\"!item.webSite\">{{ item.nickname }}</span>\n            <a v-else :href=\"item.webSite\" target=\"_blank\">\n              {{ item.nickname }}\n            </a>\n            <span class=\"blogger-tag\" v-if=\"item.userId == 1\">博主</span>\n          </div>\n          <!-- 信息 -->\n          <div class=\"comment-info\">\n            <!-- 楼层 -->\n            <span style=\"margin-right:10px\">{{ count - index }}楼</span>\n            <!-- 发表时间 -->\n            <span style=\"margin-right:10px\">{{ item.createTime | date }}</span>\n            <!-- 点赞 -->\n            <span\n                :class=\"isLike(item.id) + ' iconfont icondianzan'\"\n                @click=\"like(item)\"\n            />\n            <span v-show=\"item.likeCount > 0\"> {{ item.likeCount }}</span>\n            <!-- 回复 -->\n            <span class=\"reply-btn\" @click=\"replyComment(index, item)\">\n              回复\n            </span>\n          </div>\n          <!-- 评论内容 -->\n          <p v-html=\"item.commentContent\" class=\"comment-content\"></p>\n          <!-- 回复人 -->\n          <div\n              style=\"display:flex\"\n              v-for=\"reply of item.replyDTOList\"\n              :key=\"reply.id\"\n          >\n            <!-- 头像 -->\n            <v-avatar size=\"36\" class=\"comment-avatar\">\n              <img :src=\"reply.avatar\"/>\n            </v-avatar>\n            <div class=\"reply-meta\">\n              <!-- 用户名 -->\n              <div class=\"comment-user\">\n                <span v-if=\"!reply.webSite\">{{ reply.nickname }}</span>\n                <a v-else :href=\"reply.webSite\" target=\"_blank\">\n                  {{ reply.nickname }}\n                </a>\n                <span class=\"blogger-tag\" v-if=\"reply.userId == 1\">博主</span>\n              </div>\n              <!-- 信息 -->\n              <div class=\"comment-info\">\n                <!-- 发表时间 -->\n                <span style=\"margin-right:10px\">\n                  {{ reply.createTime | date }}\n                </span>\n                <!-- 点赞 -->\n                <span\n                    :class=\"isLike(reply.id) + ' iconfont icondianzan'\"\n                    @click=\"like(reply)\"\n                />\n                <span v-show=\"reply.likeCount > 0\"> {{ reply.likeCount }}</span>\n                <!-- 回复 -->\n                <span class=\"reply-btn\" @click=\"replyComment(index, reply)\">\n                  回复\n                </span>\n              </div>\n              <!-- 回复内容 -->\n              <p class=\"comment-content\">\n                <!-- 回复用户名 -->\n                <template v-if=\"reply.replyUserId != item.userId\">\n                  <span v-if=\"!reply.replyWebSite\" class=\"ml-1\">\n                    @{{ reply.replyNickname }}\n                  </span>\n                  <a\n                      v-else\n                      :href=\"reply.replyWebSite\"\n                      target=\"_blank\"\n                      class=\"comment-nickname ml-1\"\n                  >\n                    @{{ reply.replyNickname }}\n                  </a>\n                  ，\n                </template>\n                <span v-html=\"reply.commentContent\"/>\n              </p>\n            </div>\n          </div>\n          <!-- 回复数量 -->\n          <div\n              class=\"mb-3\"\n              style=\"font-size:0.75rem;color:#6d757a\"\n              v-show=\"item.replyCount > 3\"\n              ref=\"check\"\n          >\n            共\n            <b>{{ item.replyCount }}</b>\n            条回复，\n            <span\n                style=\"color:#00a1d6;cursor:pointer\"\n                @click=\"checkReplies(index, item)\"\n            >\n              点击查看\n            </span>\n          </div>\n          <!-- 回复分页 -->\n          <div\n              class=\"mb-3\"\n              style=\"font-size:0.75rem;color:#222;display:none\"\n              ref=\"paging\"\n          >\n            <span style=\"padding-right:10px\">\n              共{{ Math.ceil(item.replyCount / 5) }}页\n            </span>\n            <paging\n                ref=\"page\"\n                :totalPage=\"Math.ceil(item.replyCount / 5)\"\n                :index=\"index\"\n                :commentId=\"item.id\"\n                @changeReplyCurrent=\"changeReplyCurrent\"\n            />\n          </div>\n          <!-- 回复框 -->\n          <Reply :type=\"type\" ref=\"reply\" @reloadReply=\"reloadReply\"/>\n        </div>\n      </div>\n      <!-- 加载按钮 -->\n      <div class=\"load-wrapper\">\n        <v-btn outlined v-if=\"count > commentList.length\" @click=\"listComments\">\n          加载更多...\n        </v-btn>\n      </div>\n    </div>\n    <!-- 没有评论提示 -->\n    <div v-else style=\"padding:1.25rem;text-align:center\">\n      来发评论吧~\n    </div>\n  </div>\n</template>\n\n<script>\nimport Reply from \"./Reply\";\nimport Paging from \"./Paging\";\nimport Emoji from \"./Emoji\";\nimport EmojiList from \"../assets/js/emoji\";\n\nexport default {\n  components: {\n    Reply,\n    Emoji,\n    Paging\n  },\n  props: {\n    type: {\n      type: Number\n    }\n  },\n  created() {\n    //  console.log('Component mounted, fetching comments...');\n    this.listComments();\n  },\n  data: function () {\n    return {\n      reFresh: true,\n      commentContent: \"\",\n      chooseEmoji: false,\n      current: 1,\n      commentList: [],\n      count: 0\n    };\n  },\n  methods: {\n    replyComment(index, item) {\n      this.$refs.reply.forEach(item => {\n        item.$el.style.display = \"none\";\n      });\n      //传值给回复框\n      this.$refs.reply[index].commentContent = \"\";\n      this.$refs.reply[index].nickname = item.nickname;\n      this.$refs.reply[index].replyUserId = item.userId;\n      this.$refs.reply[index].parentId = this.commentList[index].id;\n      this.$refs.reply[index].chooseEmoji = false;\n      this.$refs.reply[index].index = index;\n      this.$refs.reply[index].$el.style.display = \"block\";\n    },\n    addEmoji(key) {\n      this.commentContent += key;\n    },\n    checkReplies(index, item) {\n      this.axios\n          .get(\"/api/comments/\" + item.id + \"/replies\", {\n            params: {current: 1, size: 5}\n          })\n          .then(({data}) => {\n            this.$refs.check[index].style.display = \"none\";\n            item.replyDTOList = data.data;\n            //超过1页才显示分页\n            if (Math.ceil(item.replyCount / 5) > 1) {\n              this.$refs.paging[index].style.display = \"flex\";\n            }\n          });\n    },\n    changeReplyCurrent(current, index, commentId) {\n      //查看下一页回复\n      this.axios\n          .get(\"/api/comments/\" + commentId + \"/replies\", {\n            params: {current: current, size: 5}\n          })\n          .then(({data}) => {\n            this.commentList[index].replyDTOList = data.data;\n          });\n    },\n\n    listComments() {\n      const path = this.$route.path;\n      const arr = path.split(\"/\");\n      const param = {\n        current: this.current,\n        type: this.type,\n        size: 10,\n        _timestamp: new Date().getTime(),\n        topicId: this.type === 1 || this.type === 3 ? arr[2] : undefined\n      };\n\n      //console.log(\"请求参数：\", param);\n\n      const token = this.$store.state.token || localStorage.getItem('token');\n      this.axios.get(\"/api/comments\", {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        params: param\n      }).then(({data}) => {\n//        console.log(\"获取的评论数据：\", data.data.recordList);\n\n        if (data.data && data.data.recordList.length > 0) {\n          const transformedComments = data.data.recordList.map(comment => ({\n            id: comment.id,\n            userId: comment.userId,\n            nickname: comment.nickname,\n            avatar: comment.avatar,\n            commentContent: comment.commentContent,\n            createTime: comment.createTime,\n            likeCount: comment.likeCount,\n            replyCount: comment.replyCount,\n            replyDTOList: comment.replyDTOList || []\n          }));\n\n          if (this.current === 1) {\n            this.commentList = transformedComments;\n          } else {\n            this.commentList.push(...transformedComments);\n          }\n          this.current++;\n          this.count = data.data.count;\n          this.$emit(\"getCommentCount\", this.count);\n\n          this.$nextTick(() => {\n          //  console.log(\"评论列表更新完成：\", this.commentList);\n          });\n        } else {\n          console.warn(\"没有获取到评论数据，recordList 为空。\");\n        }\n      }).catch(error => {\n        console.error(\"请求评论数据时出错：\", error);\n      });\n    }\n\n    ,\n    insertComment() {\n      const token = this.$store.state.token || localStorage.getItem('token');\n      if (!this.$store.state.userId) {\n        console.log('User ID is not set, setting loginFlag to true');\n        this.$store.state.loginFlag = true;\n        this.$toast({type: \"error\", message: \"请先登录\"});\n        return false;\n      }\n\n      if (this.commentContent.trim() === \"\") {\n        this.$toast({type: \"error\", message: \"评论不能为空\"});\n        return false;\n      }\n\n      const reg = /\\[.+?\\]/g;\n      const formattedContent = this.commentContent.replace(reg, (str) => {\n        return (\n            \"<img src='\" +\n            EmojiList[str] +\n            \"' width='24' height='24' style='margin: 0 1px; vertical-align: text-bottom'/>\"\n        );\n      });\n\n      const path = this.$route.path;\n      const arr = path.split(\"/\");\n      const comment = {\n        commentContent: formattedContent,\n        type: this.type\n      };\n      if (this.type === 1 || this.type === 3) {\n        comment.topicId = arr[2];\n      }\n\n      //console.log(\"提交的评论数据：\", comment);\n\n      this.axios.post(\"/api/comments\", comment, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(({data}) => {\n\n        if (data.data && data.data.recordList && data.data.recordList.length) {\n          const newComment = data.data.recordList.map(comment => ({\n            id: comment.id,\n            userId: comment.userId,\n            nickname: comment.nickname,\n            avatar: comment.avatar,\n            commentContent: comment.commentContent,\n            createTime: comment.createTime,\n            likeCount: comment.likeCount,\n            replyCount: comment.replyCount,\n            replyDTOList: comment.replyDTOList || []\n          }))[0]; // 获取新评论\n\n          this.commentList.unshift(newComment); // 将新评论添加到列表的顶部\n\n          this.commentContent = \"\";\n\n          this.count++;\n          this.$emit(\"getCommentCount\", this.count);\n\n          const isReview = this.$store.state.blogInfo.websiteConfig.isCommentReview;\n          if (isReview) {\n            this.$toast({type: \"warning\", message: \"评论成功，正在审核中\"});\n          } else {\n            this.$toast({type: \"success\", message: \"评论成功\"});\n          }\n        } else {\n          this.$toast({type: \"error\", message: \"评论提交失败\"});\n        }\n      }).catch(error => {\n        console.error(\"提交评论时出错：\", error);\n        this.$toast({type: \"error\", message: \"评论提交失败，请稍后再试\"});\n      });\n    }\n\n    ,\n    like(comment) {\n      // 判断是否已登录\n      if (!this.$store.state.userId) {\n        this.$toast({type: \"error\", message: \"请先登录\"});\n        this.$store.state.loginFlag = true;\n        return false;\n      }\n      const token = this.$store.state.token || localStorage.getItem('token');\n\n      // 发送请求\n      this.axios\n          .post(`/api/comments/${comment.id}/like`, {}, {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            },\n          })\n          .then(({data}) => {\n            if (data.flag) {\n              const newLikeCount = data.data; // 后端返回的新点赞数量\n              this.$set(comment, \"likeCount\", newLikeCount); // 更新点赞数量\n\n              // 更新 Vuex 中的点赞状态\n              if (this.$store.state.commentLikeSet.includes(comment.id.toString())) {\n                this.$store.commit(\"commentLike\", comment.id); // 取消点赞\n              } else {\n                this.$store.commit(\"commentLike\", comment.id); // 点赞\n              }\n            }\n          })\n          .catch(error => {\n            console.error(\"Error processing like:\", error);\n          });\n    }\n\n    ,\n    reloadReply(index) {\n      const token = this.$store.state.token || localStorage.getItem('token');\n      this.axios\n          .get(\"/api/comments/\" + this.commentList[index].id + \"/replies\", {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            },\n            params: {\n              current: 1,\n              size: 5\n            }\n          })\n          .then(({data}) => {\n            console.log(\"Replies data:\", data); // Debug log\n            if (data.flag && data.data) {\n              // 更新 replyDTOList\n              this.$set(this.commentList[index], 'replyDTOList', data.data);\n\n              this.commentList[index].replyCount = data.data.length;\n\n              // 更新分页按钮\n              this.$nextTick(() => {\n                if (this.commentList[index].replyCount > 5) {\n                  this.$refs.paging[index].style.display = \"flex\";\n                }\n                this.$refs.check[index].style.display = \"none\";\n                this.$refs.reply[index].$el.style.display = \"none\";\n              });\n            } else {\n              console.error(\"Failed to load replies:\", data.message || \"Unknown error\");\n            }\n          }).catch(error => {\n        console.error(\"Error loading replies:\", error); // Add this line\n      });\n    }\n  },\n  computed: {\n    isLike() {\n      return (commentId) => {\n        var commentLikeSet = this.$store.state.commentLikeSet;\n        return commentLikeSet.indexOf(commentId.toString()) !== -1 ? \"like-active\" : \"like\";\n      };\n    }\n  },\n  watch: {\n    commentList() {\n     // console.log('CommentList updated in watcher:', this.commentList);\n      this.reFresh = false;\n      this.$nextTick(() => {\n        this.reFresh = true;\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.blogger-tag {\n  background: #ffa51e;\n  font-size: 12px;\n  display: inline-block;\n  border-radius: 2px;\n  color: #fff;\n  padding: 0 5px;\n  margin-left: 6px;\n}\n\n.comment-title {\n  display: flex;\n  align-items: center;\n  font-size: 1.25rem;\n  font-weight: bold;\n  line-height: 40px;\n  margin-bottom: 10px;\n}\n\n.comment-title i {\n  font-size: 1.5rem;\n  margin-right: 5px;\n}\n\n.comment-input-wrapper {\n  border: 1px solid #90939950;\n  border-radius: 4px;\n  padding: 10px;\n  margin: 0 0 10px;\n}\n\n.count {\n  padding: 5px;\n  line-height: 1.75;\n  font-size: 1.25rem;\n  font-weight: bold;\n}\n\n.comment-meta {\n  margin-left: 0.8rem;\n  width: 100%;\n  border-bottom: 1px dashed #f5f5f5;\n}\n\n.reply-meta {\n  margin-left: 0.8rem;\n  width: 100%;\n}\n\n.comment-user {\n  font-size: 14px;\n  line-height: 1.75;\n}\n\n.comment-user a {\n  color: #1abc9c !important;\n  font-weight: 500;\n  transition: 0.3s all;\n}\n\n.comment-nickname {\n  text-decoration: none;\n  color: #1abc9c !important;\n  font-weight: 500;\n}\n\n.comment-info {\n  line-height: 1.75;\n  font-size: 0.75rem;\n  color: #b3b3b3;\n}\n\n.reply-btn {\n  cursor: pointer;\n  float: right;\n  color: #ef2f11;\n}\n\n.comment-content {\n  font-size: 0.875rem;\n  line-height: 1.75;\n  padding-top: 0.625rem;\n  white-space: pre-line;\n  word-wrap: break-word;\n  word-break: break-all;\n}\n\n.comment-avatar {\n  transition: all 0.5s;\n}\n\n.comment-avatar:hover {\n  transform: rotate(360deg);\n}\n\n.like {\n  cursor: pointer;\n  font-size: 0.875rem;\n}\n\n.like:hover {\n  color: #eb5055;\n}\n\n.like-active {\n  cursor: pointer;\n  font-size: 0.875rem;\n  color: #eb5055;\n}\n\n.load-wrapper {\n  margin-top: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.load-wrapper button {\n  background-color: #49b1f5;\n  color: #fff;\n}\n</style>\n"],"sourceRoot":"src/components"}]}