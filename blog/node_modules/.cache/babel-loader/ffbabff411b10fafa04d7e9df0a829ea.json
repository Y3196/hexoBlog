{"remainingRequest":"S:\\SpringBoot + Vue博客源码\\blog-master\\blog-vue\\blog\\node_modules\\babel-loader\\lib\\index.js!S:\\SpringBoot + Vue博客源码\\blog-master\\blog-vue\\blog\\node_modules\\vuetify\\lib\\components\\VData\\VData.js","dependencies":[{"path":"S:\\SpringBoot + Vue博客源码\\blog-master\\blog-vue\\blog\\node_modules\\vuetify\\lib\\components\\VData\\VData.js","mtime":499162500000},{"path":"S:\\SpringBoot + Vue博客源码\\blog-master\\blog-vue\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"S:\\SpringBoot + Vue博客源码\\blog-master\\blog-vue\\blog\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc2VhcmNoIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiUzpcXFNwcmluZ0Jvb3QgKyBWdWVcdTUzNUFcdTVCQTJcdTZFOTBcdTc4MDFcXGJsb2ctbWFzdGVyXFxibG9nLXZ1ZVxcYmxvZ1xcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCBfdG9Db25zdW1hYmxlQXJyYXkgZnJvbSAiUzpcXFNwcmluZ0Jvb3QgKyBWdWVcdTUzNUFcdTVCQTJcdTZFOTBcdTc4MDFcXGJsb2ctbWFzdGVyXFxibG9nLXZ1ZVxcYmxvZ1xcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwovLyBIZWxwZXJzCmltcG9ydCB7IHdyYXBJbkFycmF5LCBzb3J0SXRlbXMsIGRlZXBFcXVhbCwgZ3JvdXBJdGVtcywgc2VhcmNoSXRlbXMsIGZpbGxBcnJheSB9IGZyb20gJy4uLy4uL3V0aWwvaGVscGVycyc7CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKZXhwb3J0IGRlZmF1bHQgVnVlLmV4dGVuZCh7CiAgbmFtZTogJ3YtZGF0YScsCiAgaW5oZXJpdEF0dHJzOiBmYWxzZSwKICBwcm9wczogewogICAgaXRlbXM6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiBbXTsKICAgICAgfQogICAgfSwKICAgIG9wdGlvbnM6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4ge307CiAgICAgIH0KICAgIH0sCiAgICBzb3J0Qnk6IHsKICAgICAgdHlwZTogW1N0cmluZywgQXJyYXldCiAgICB9LAogICAgc29ydERlc2M6IHsKICAgICAgdHlwZTogW0Jvb2xlYW4sIEFycmF5XQogICAgfSwKICAgIGN1c3RvbVNvcnQ6IHsKICAgICAgdHlwZTogRnVuY3Rpb24sCiAgICAgIGRlZmF1bHQ6IHNvcnRJdGVtcwogICAgfSwKICAgIG11c3RTb3J0OiBCb29sZWFuLAogICAgbXVsdGlTb3J0OiBCb29sZWFuLAogICAgcGFnZTogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDEKICAgIH0sCiAgICBpdGVtc1BlclBhZ2U6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAxMAogICAgfSwKICAgIGdyb3VwQnk6IHsKICAgICAgdHlwZTogW1N0cmluZywgQXJyYXldLAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KICAgIH0sCiAgICBncm91cERlc2M6IHsKICAgICAgdHlwZTogW0Jvb2xlYW4sIEFycmF5XSwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIFtdOwogICAgICB9CiAgICB9LAogICAgY3VzdG9tR3JvdXA6IHsKICAgICAgdHlwZTogRnVuY3Rpb24sCiAgICAgIGRlZmF1bHQ6IGdyb3VwSXRlbXMKICAgIH0sCiAgICBsb2NhbGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnZW4tVVMnCiAgICB9LAogICAgZGlzYWJsZVNvcnQ6IEJvb2xlYW4sCiAgICBkaXNhYmxlUGFnaW5hdGlvbjogQm9vbGVhbiwKICAgIGRpc2FibGVGaWx0ZXJpbmc6IEJvb2xlYW4sCiAgICBzZWFyY2g6IFN0cmluZywKICAgIGN1c3RvbUZpbHRlcjogewogICAgICB0eXBlOiBGdW5jdGlvbiwKICAgICAgZGVmYXVsdDogc2VhcmNoSXRlbXMKICAgIH0sCiAgICBzZXJ2ZXJJdGVtc0xlbmd0aDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IC0xCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgdmFyIGludGVybmFsT3B0aW9ucyA9IHsKICAgICAgcGFnZTogdGhpcy5wYWdlLAogICAgICBpdGVtc1BlclBhZ2U6IHRoaXMuaXRlbXNQZXJQYWdlLAogICAgICBzb3J0Qnk6IHdyYXBJbkFycmF5KHRoaXMuc29ydEJ5KSwKICAgICAgc29ydERlc2M6IHdyYXBJbkFycmF5KHRoaXMuc29ydERlc2MpLAogICAgICBncm91cEJ5OiB3cmFwSW5BcnJheSh0aGlzLmdyb3VwQnkpLAogICAgICBncm91cERlc2M6IHdyYXBJbkFycmF5KHRoaXMuZ3JvdXBEZXNjKSwKICAgICAgbXVzdFNvcnQ6IHRoaXMubXVzdFNvcnQsCiAgICAgIG11bHRpU29ydDogdGhpcy5tdWx0aVNvcnQKICAgIH07CgogICAgaWYgKHRoaXMub3B0aW9ucykgewogICAgICBpbnRlcm5hbE9wdGlvbnMgPSBPYmplY3QuYXNzaWduKGludGVybmFsT3B0aW9ucywgdGhpcy5vcHRpb25zKTsKICAgIH0KCiAgICB2YXIgX2ludGVybmFsT3B0aW9ucyA9IGludGVybmFsT3B0aW9ucywKICAgICAgICBzb3J0QnkgPSBfaW50ZXJuYWxPcHRpb25zLnNvcnRCeSwKICAgICAgICBzb3J0RGVzYyA9IF9pbnRlcm5hbE9wdGlvbnMuc29ydERlc2MsCiAgICAgICAgZ3JvdXBCeSA9IF9pbnRlcm5hbE9wdGlvbnMuZ3JvdXBCeSwKICAgICAgICBncm91cERlc2MgPSBfaW50ZXJuYWxPcHRpb25zLmdyb3VwRGVzYzsKICAgIHZhciBzb3J0RGlmZiA9IHNvcnRCeS5sZW5ndGggLSBzb3J0RGVzYy5sZW5ndGg7CiAgICB2YXIgZ3JvdXBEaWZmID0gZ3JvdXBCeS5sZW5ndGggLSBncm91cERlc2MubGVuZ3RoOwoKICAgIGlmIChzb3J0RGlmZiA+IDApIHsKICAgICAgdmFyIF9pbnRlcm5hbE9wdGlvbnMkc29ydDsKCiAgICAgIChfaW50ZXJuYWxPcHRpb25zJHNvcnQgPSBpbnRlcm5hbE9wdGlvbnMuc29ydERlc2MpLnB1c2guYXBwbHkoX2ludGVybmFsT3B0aW9ucyRzb3J0LCBfdG9Db25zdW1hYmxlQXJyYXkoZmlsbEFycmF5KHNvcnREaWZmLCBmYWxzZSkpKTsKICAgIH0KCiAgICBpZiAoZ3JvdXBEaWZmID4gMCkgewogICAgICB2YXIgX2ludGVybmFsT3B0aW9ucyRncm91OwoKICAgICAgKF9pbnRlcm5hbE9wdGlvbnMkZ3JvdSA9IGludGVybmFsT3B0aW9ucy5ncm91cERlc2MpLnB1c2guYXBwbHkoX2ludGVybmFsT3B0aW9ucyRncm91LCBfdG9Db25zdW1hYmxlQXJyYXkoZmlsbEFycmF5KGdyb3VwRGlmZiwgZmFsc2UpKSk7CiAgICB9CgogICAgcmV0dXJuIHsKICAgICAgaW50ZXJuYWxPcHRpb25zOiBpbnRlcm5hbE9wdGlvbnMKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgaXRlbXNMZW5ndGg6IGZ1bmN0aW9uIGl0ZW1zTGVuZ3RoKCkgewogICAgICByZXR1cm4gdGhpcy5zZXJ2ZXJJdGVtc0xlbmd0aCA+PSAwID8gdGhpcy5zZXJ2ZXJJdGVtc0xlbmd0aCA6IHRoaXMuZmlsdGVyZWRJdGVtcy5sZW5ndGg7CiAgICB9LAogICAgcGFnZUNvdW50OiBmdW5jdGlvbiBwYWdlQ291bnQoKSB7CiAgICAgIHJldHVybiB0aGlzLmludGVybmFsT3B0aW9ucy5pdGVtc1BlclBhZ2UgPD0gMCA/IDEgOiBNYXRoLmNlaWwodGhpcy5pdGVtc0xlbmd0aCAvIHRoaXMuaW50ZXJuYWxPcHRpb25zLml0ZW1zUGVyUGFnZSk7CiAgICB9LAogICAgcGFnZVN0YXJ0OiBmdW5jdGlvbiBwYWdlU3RhcnQoKSB7CiAgICAgIGlmICh0aGlzLmludGVybmFsT3B0aW9ucy5pdGVtc1BlclBhZ2UgPT09IC0xIHx8ICF0aGlzLml0ZW1zLmxlbmd0aCkgcmV0dXJuIDA7CiAgICAgIHJldHVybiAodGhpcy5pbnRlcm5hbE9wdGlvbnMucGFnZSAtIDEpICogdGhpcy5pbnRlcm5hbE9wdGlvbnMuaXRlbXNQZXJQYWdlOwogICAgfSwKICAgIHBhZ2VTdG9wOiBmdW5jdGlvbiBwYWdlU3RvcCgpIHsKICAgICAgaWYgKHRoaXMuaW50ZXJuYWxPcHRpb25zLml0ZW1zUGVyUGFnZSA9PT0gLTEpIHJldHVybiB0aGlzLml0ZW1zTGVuZ3RoOwogICAgICBpZiAoIXRoaXMuaXRlbXMubGVuZ3RoKSByZXR1cm4gMDsKICAgICAgcmV0dXJuIE1hdGgubWluKHRoaXMuaXRlbXNMZW5ndGgsIHRoaXMuaW50ZXJuYWxPcHRpb25zLnBhZ2UgKiB0aGlzLmludGVybmFsT3B0aW9ucy5pdGVtc1BlclBhZ2UpOwogICAgfSwKICAgIGlzR3JvdXBlZDogZnVuY3Rpb24gaXNHcm91cGVkKCkgewogICAgICByZXR1cm4gISF0aGlzLmludGVybmFsT3B0aW9ucy5ncm91cEJ5Lmxlbmd0aDsKICAgIH0sCiAgICBwYWdpbmF0aW9uOiBmdW5jdGlvbiBwYWdpbmF0aW9uKCkgewogICAgICByZXR1cm4gewogICAgICAgIHBhZ2U6IHRoaXMuaW50ZXJuYWxPcHRpb25zLnBhZ2UsCiAgICAgICAgaXRlbXNQZXJQYWdlOiB0aGlzLmludGVybmFsT3B0aW9ucy5pdGVtc1BlclBhZ2UsCiAgICAgICAgcGFnZVN0YXJ0OiB0aGlzLnBhZ2VTdGFydCwKICAgICAgICBwYWdlU3RvcDogdGhpcy5wYWdlU3RvcCwKICAgICAgICBwYWdlQ291bnQ6IHRoaXMucGFnZUNvdW50LAogICAgICAgIGl0ZW1zTGVuZ3RoOiB0aGlzLml0ZW1zTGVuZ3RoCiAgICAgIH07CiAgICB9LAogICAgZmlsdGVyZWRJdGVtczogZnVuY3Rpb24gZmlsdGVyZWRJdGVtcygpIHsKICAgICAgdmFyIGl0ZW1zID0gdGhpcy5pdGVtcy5zbGljZSgpOwoKICAgICAgaWYgKCF0aGlzLmRpc2FibGVGaWx0ZXJpbmcgJiYgdGhpcy5zZXJ2ZXJJdGVtc0xlbmd0aCA8PSAwKSB7CiAgICAgICAgaXRlbXMgPSB0aGlzLmN1c3RvbUZpbHRlcihpdGVtcywgdGhpcy5zZWFyY2gpOwogICAgICB9CgogICAgICByZXR1cm4gaXRlbXM7CiAgICB9LAogICAgY29tcHV0ZWRJdGVtczogZnVuY3Rpb24gY29tcHV0ZWRJdGVtcygpIHsKICAgICAgdmFyIGl0ZW1zID0gdGhpcy5maWx0ZXJlZEl0ZW1zLnNsaWNlKCk7CgogICAgICBpZiAoKCF0aGlzLmRpc2FibGVTb3J0IHx8IHRoaXMuaW50ZXJuYWxPcHRpb25zLmdyb3VwQnkubGVuZ3RoKSAmJiB0aGlzLnNlcnZlckl0ZW1zTGVuZ3RoIDw9IDApIHsKICAgICAgICBpdGVtcyA9IHRoaXMuc29ydEl0ZW1zKGl0ZW1zKTsKICAgICAgfQoKICAgICAgaWYgKCF0aGlzLmRpc2FibGVQYWdpbmF0aW9uICYmIHRoaXMuc2VydmVySXRlbXNMZW5ndGggPD0gMCkgewogICAgICAgIGl0ZW1zID0gdGhpcy5wYWdpbmF0ZUl0ZW1zKGl0ZW1zKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGl0ZW1zOwogICAgfSwKICAgIGdyb3VwZWRJdGVtczogZnVuY3Rpb24gZ3JvdXBlZEl0ZW1zKCkgewogICAgICByZXR1cm4gdGhpcy5pc0dyb3VwZWQgPyB0aGlzLmdyb3VwSXRlbXModGhpcy5jb21wdXRlZEl0ZW1zKSA6IG51bGw7CiAgICB9LAogICAgc2NvcGVkUHJvcHM6IGZ1bmN0aW9uIHNjb3BlZFByb3BzKCkgewogICAgICByZXR1cm4gewogICAgICAgIHNvcnQ6IHRoaXMuc29ydCwKICAgICAgICBzb3J0QXJyYXk6IHRoaXMuc29ydEFycmF5LAogICAgICAgIGdyb3VwOiB0aGlzLmdyb3VwLAogICAgICAgIGl0ZW1zOiB0aGlzLmNvbXB1dGVkSXRlbXMsCiAgICAgICAgb3B0aW9uczogdGhpcy5pbnRlcm5hbE9wdGlvbnMsCiAgICAgICAgdXBkYXRlT3B0aW9uczogdGhpcy51cGRhdGVPcHRpb25zLAogICAgICAgIHBhZ2luYXRpb246IHRoaXMucGFnaW5hdGlvbiwKICAgICAgICBncm91cGVkSXRlbXM6IHRoaXMuZ3JvdXBlZEl0ZW1zLAogICAgICAgIG9yaWdpbmFsSXRlbXNMZW5ndGg6IHRoaXMuaXRlbXMubGVuZ3RoCiAgICAgIH07CiAgICB9LAogICAgY29tcHV0ZWRPcHRpb25zOiBmdW5jdGlvbiBjb21wdXRlZE9wdGlvbnMoKSB7CiAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCB0aGlzLm9wdGlvbnMpOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGNvbXB1dGVkT3B0aW9uczogewogICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKG9wdGlvbnMsIG9sZCkgewogICAgICAgIGlmIChkZWVwRXF1YWwob3B0aW9ucywgb2xkKSkgcmV0dXJuOwogICAgICAgIHRoaXMudXBkYXRlT3B0aW9ucyhvcHRpb25zKTsKICAgICAgfSwKICAgICAgZGVlcDogdHJ1ZSwKICAgICAgaW1tZWRpYXRlOiB0cnVlCiAgICB9LAogICAgaW50ZXJuYWxPcHRpb25zOiB7CiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIob3B0aW9ucywgb2xkKSB7CiAgICAgICAgaWYgKGRlZXBFcXVhbChvcHRpb25zLCBvbGQpKSByZXR1cm47CiAgICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOm9wdGlvbnMnLCBvcHRpb25zKTsKICAgICAgfSwKICAgICAgZGVlcDogdHJ1ZSwKICAgICAgaW1tZWRpYXRlOiB0cnVlCiAgICB9LAogICAgcGFnZTogZnVuY3Rpb24gcGFnZShfcGFnZSkgewogICAgICB0aGlzLnVwZGF0ZU9wdGlvbnMoewogICAgICAgIHBhZ2U6IF9wYWdlCiAgICAgIH0pOwogICAgfSwKICAgICdpbnRlcm5hbE9wdGlvbnMucGFnZSc6IGZ1bmN0aW9uIGludGVybmFsT3B0aW9uc1BhZ2UocGFnZSkgewogICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6cGFnZScsIHBhZ2UpOwogICAgfSwKICAgIGl0ZW1zUGVyUGFnZTogZnVuY3Rpb24gaXRlbXNQZXJQYWdlKF9pdGVtc1BlclBhZ2UpIHsKICAgICAgdGhpcy51cGRhdGVPcHRpb25zKHsKICAgICAgICBpdGVtc1BlclBhZ2U6IF9pdGVtc1BlclBhZ2UKICAgICAgfSk7CiAgICB9LAogICAgJ2ludGVybmFsT3B0aW9ucy5pdGVtc1BlclBhZ2UnOiBmdW5jdGlvbiBpbnRlcm5hbE9wdGlvbnNJdGVtc1BlclBhZ2UoaXRlbXNQZXJQYWdlKSB7CiAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTppdGVtcy1wZXItcGFnZScsIGl0ZW1zUGVyUGFnZSk7CiAgICB9LAogICAgc29ydEJ5OiBmdW5jdGlvbiBzb3J0QnkoX3NvcnRCeSkgewogICAgICB0aGlzLnVwZGF0ZU9wdGlvbnMoewogICAgICAgIHNvcnRCeTogd3JhcEluQXJyYXkoX3NvcnRCeSkKICAgICAgfSk7CiAgICB9LAogICAgJ2ludGVybmFsT3B0aW9ucy5zb3J0QnknOiBmdW5jdGlvbiBpbnRlcm5hbE9wdGlvbnNTb3J0Qnkoc29ydEJ5LCBvbGQpIHsKICAgICAgIWRlZXBFcXVhbChzb3J0QnksIG9sZCkgJiYgdGhpcy4kZW1pdCgndXBkYXRlOnNvcnQtYnknLCBBcnJheS5pc0FycmF5KHRoaXMuc29ydEJ5KSA/IHNvcnRCeSA6IHNvcnRCeVswXSk7CiAgICB9LAogICAgc29ydERlc2M6IGZ1bmN0aW9uIHNvcnREZXNjKF9zb3J0RGVzYykgewogICAgICB0aGlzLnVwZGF0ZU9wdGlvbnMoewogICAgICAgIHNvcnREZXNjOiB3cmFwSW5BcnJheShfc29ydERlc2MpCiAgICAgIH0pOwogICAgfSwKICAgICdpbnRlcm5hbE9wdGlvbnMuc29ydERlc2MnOiBmdW5jdGlvbiBpbnRlcm5hbE9wdGlvbnNTb3J0RGVzYyhzb3J0RGVzYywgb2xkKSB7CiAgICAgICFkZWVwRXF1YWwoc29ydERlc2MsIG9sZCkgJiYgdGhpcy4kZW1pdCgndXBkYXRlOnNvcnQtZGVzYycsIEFycmF5LmlzQXJyYXkodGhpcy5zb3J0RGVzYykgPyBzb3J0RGVzYyA6IHNvcnREZXNjWzBdKTsKICAgIH0sCiAgICBncm91cEJ5OiBmdW5jdGlvbiBncm91cEJ5KF9ncm91cEJ5KSB7CiAgICAgIHRoaXMudXBkYXRlT3B0aW9ucyh7CiAgICAgICAgZ3JvdXBCeTogd3JhcEluQXJyYXkoX2dyb3VwQnkpCiAgICAgIH0pOwogICAgfSwKICAgICdpbnRlcm5hbE9wdGlvbnMuZ3JvdXBCeSc6IGZ1bmN0aW9uIGludGVybmFsT3B0aW9uc0dyb3VwQnkoZ3JvdXBCeSwgb2xkKSB7CiAgICAgICFkZWVwRXF1YWwoZ3JvdXBCeSwgb2xkKSAmJiB0aGlzLiRlbWl0KCd1cGRhdGU6Z3JvdXAtYnknLCBBcnJheS5pc0FycmF5KHRoaXMuZ3JvdXBCeSkgPyBncm91cEJ5IDogZ3JvdXBCeVswXSk7CiAgICB9LAogICAgZ3JvdXBEZXNjOiBmdW5jdGlvbiBncm91cERlc2MoX2dyb3VwRGVzYykgewogICAgICB0aGlzLnVwZGF0ZU9wdGlvbnMoewogICAgICAgIGdyb3VwRGVzYzogd3JhcEluQXJyYXkoX2dyb3VwRGVzYykKICAgICAgfSk7CiAgICB9LAogICAgJ2ludGVybmFsT3B0aW9ucy5ncm91cERlc2MnOiBmdW5jdGlvbiBpbnRlcm5hbE9wdGlvbnNHcm91cERlc2MoZ3JvdXBEZXNjLCBvbGQpIHsKICAgICAgIWRlZXBFcXVhbChncm91cERlc2MsIG9sZCkgJiYgdGhpcy4kZW1pdCgndXBkYXRlOmdyb3VwLWRlc2MnLCBBcnJheS5pc0FycmF5KHRoaXMuZ3JvdXBEZXNjKSA/IGdyb3VwRGVzYyA6IGdyb3VwRGVzY1swXSk7CiAgICB9LAogICAgbXVsdGlTb3J0OiBmdW5jdGlvbiBtdWx0aVNvcnQoX211bHRpU29ydCkgewogICAgICB0aGlzLnVwZGF0ZU9wdGlvbnMoewogICAgICAgIG11bHRpU29ydDogX211bHRpU29ydAogICAgICB9KTsKICAgIH0sCiAgICAnaW50ZXJuYWxPcHRpb25zLm11bHRpU29ydCc6IGZ1bmN0aW9uIGludGVybmFsT3B0aW9uc011bHRpU29ydChtdWx0aVNvcnQpIHsKICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOm11bHRpLXNvcnQnLCBtdWx0aVNvcnQpOwogICAgfSwKICAgIG11c3RTb3J0OiBmdW5jdGlvbiBtdXN0U29ydChfbXVzdFNvcnQpIHsKICAgICAgdGhpcy51cGRhdGVPcHRpb25zKHsKICAgICAgICBtdXN0U29ydDogX211c3RTb3J0CiAgICAgIH0pOwogICAgfSwKICAgICdpbnRlcm5hbE9wdGlvbnMubXVzdFNvcnQnOiBmdW5jdGlvbiBpbnRlcm5hbE9wdGlvbnNNdXN0U29ydChtdXN0U29ydCkgewogICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6bXVzdC1zb3J0JywgbXVzdFNvcnQpOwogICAgfSwKICAgIHBhZ2VDb3VudDogewogICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKHBhZ2VDb3VudCkgewogICAgICAgIHRoaXMuJGVtaXQoJ3BhZ2UtY291bnQnLCBwYWdlQ291bnQpOwogICAgICB9LAogICAgICBpbW1lZGlhdGU6IHRydWUKICAgIH0sCiAgICBjb21wdXRlZEl0ZW1zOiB7CiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIoY29tcHV0ZWRJdGVtcykgewogICAgICAgIHRoaXMuJGVtaXQoJ2N1cnJlbnQtaXRlbXMnLCBjb21wdXRlZEl0ZW1zKTsKICAgICAgfSwKICAgICAgaW1tZWRpYXRlOiB0cnVlCiAgICB9LAogICAgcGFnaW5hdGlvbjogewogICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKHBhZ2luYXRpb24sIG9sZCkgewogICAgICAgIGlmIChkZWVwRXF1YWwocGFnaW5hdGlvbiwgb2xkKSkgcmV0dXJuOwogICAgICAgIHRoaXMuJGVtaXQoJ3BhZ2luYXRpb24nLCB0aGlzLnBhZ2luYXRpb24pOwogICAgICB9LAogICAgICBpbW1lZGlhdGU6IHRydWUKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHRvZ2dsZTogZnVuY3Rpb24gdG9nZ2xlKGtleSwgb2xkQnksIG9sZERlc2MsIHBhZ2UsIG11c3RTb3J0LCBtdWx0aVNvcnQpIHsKICAgICAgdmFyIGJ5ID0gb2xkQnkuc2xpY2UoKTsKICAgICAgdmFyIGRlc2MgPSBvbGREZXNjLnNsaWNlKCk7CiAgICAgIHZhciBieUluZGV4ID0gYnkuZmluZEluZGV4KGZ1bmN0aW9uIChrKSB7CiAgICAgICAgcmV0dXJuIGsgPT09IGtleTsKICAgICAgfSk7CgogICAgICBpZiAoYnlJbmRleCA8IDApIHsKICAgICAgICBpZiAoIW11bHRpU29ydCkgewogICAgICAgICAgYnkgPSBbXTsKICAgICAgICAgIGRlc2MgPSBbXTsKICAgICAgICB9CgogICAgICAgIGJ5LnB1c2goa2V5KTsKICAgICAgICBkZXNjLnB1c2goZmFsc2UpOwogICAgICB9IGVsc2UgaWYgKGJ5SW5kZXggPj0gMCAmJiAhZGVzY1tieUluZGV4XSkgewogICAgICAgIGRlc2NbYnlJbmRleF0gPSB0cnVlOwogICAgICB9IGVsc2UgaWYgKCFtdXN0U29ydCkgewogICAgICAgIGJ5LnNwbGljZShieUluZGV4LCAxKTsKICAgICAgICBkZXNjLnNwbGljZShieUluZGV4LCAxKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBkZXNjW2J5SW5kZXhdID0gZmFsc2U7CiAgICAgIH0gLy8gUmVzZXQgcGFnZSB0byAxIGlmIHNvcnRCeSBvciBzb3J0RGVzYyBoYXZlIGNoYW5nZWQKCgogICAgICBpZiAoIWRlZXBFcXVhbChieSwgb2xkQnkpIHx8ICFkZWVwRXF1YWwoZGVzYywgb2xkRGVzYykpIHsKICAgICAgICBwYWdlID0gMTsKICAgICAgfQoKICAgICAgcmV0dXJuIHsKICAgICAgICBieTogYnksCiAgICAgICAgZGVzYzogZGVzYywKICAgICAgICBwYWdlOiBwYWdlCiAgICAgIH07CiAgICB9LAogICAgZ3JvdXA6IGZ1bmN0aW9uIGdyb3VwKGtleSkgewogICAgICB2YXIgX3RoaXMkdG9nZ2xlID0gdGhpcy50b2dnbGUoa2V5LCB0aGlzLmludGVybmFsT3B0aW9ucy5ncm91cEJ5LCB0aGlzLmludGVybmFsT3B0aW9ucy5ncm91cERlc2MsIHRoaXMuaW50ZXJuYWxPcHRpb25zLnBhZ2UsIHRydWUsIGZhbHNlKSwKICAgICAgICAgIGdyb3VwQnkgPSBfdGhpcyR0b2dnbGUuYnksCiAgICAgICAgICBncm91cERlc2MgPSBfdGhpcyR0b2dnbGUuZGVzYywKICAgICAgICAgIHBhZ2UgPSBfdGhpcyR0b2dnbGUucGFnZTsKCiAgICAgIHRoaXMudXBkYXRlT3B0aW9ucyh7CiAgICAgICAgZ3JvdXBCeTogZ3JvdXBCeSwKICAgICAgICBncm91cERlc2M6IGdyb3VwRGVzYywKICAgICAgICBwYWdlOiBwYWdlCiAgICAgIH0pOwogICAgfSwKICAgIHNvcnQ6IGZ1bmN0aW9uIHNvcnQoa2V5KSB7CiAgICAgIGlmIChBcnJheS5pc0FycmF5KGtleSkpIHJldHVybiB0aGlzLnNvcnRBcnJheShrZXkpOwoKICAgICAgdmFyIF90aGlzJHRvZ2dsZTIgPSB0aGlzLnRvZ2dsZShrZXksIHRoaXMuaW50ZXJuYWxPcHRpb25zLnNvcnRCeSwgdGhpcy5pbnRlcm5hbE9wdGlvbnMuc29ydERlc2MsIHRoaXMuaW50ZXJuYWxPcHRpb25zLnBhZ2UsIHRoaXMuaW50ZXJuYWxPcHRpb25zLm11c3RTb3J0LCB0aGlzLmludGVybmFsT3B0aW9ucy5tdWx0aVNvcnQpLAogICAgICAgICAgc29ydEJ5ID0gX3RoaXMkdG9nZ2xlMi5ieSwKICAgICAgICAgIHNvcnREZXNjID0gX3RoaXMkdG9nZ2xlMi5kZXNjLAogICAgICAgICAgcGFnZSA9IF90aGlzJHRvZ2dsZTIucGFnZTsKCiAgICAgIHRoaXMudXBkYXRlT3B0aW9ucyh7CiAgICAgICAgc29ydEJ5OiBzb3J0QnksCiAgICAgICAgc29ydERlc2M6IHNvcnREZXNjLAogICAgICAgIHBhZ2U6IHBhZ2UKICAgICAgfSk7CiAgICB9LAogICAgc29ydEFycmF5OiBmdW5jdGlvbiBzb3J0QXJyYXkoc29ydEJ5KSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgc29ydERlc2MgPSBzb3J0QnkubWFwKGZ1bmN0aW9uIChzKSB7CiAgICAgICAgdmFyIGkgPSBfdGhpcy5pbnRlcm5hbE9wdGlvbnMuc29ydEJ5LmZpbmRJbmRleChmdW5jdGlvbiAoaykgewogICAgICAgICAgcmV0dXJuIGsgPT09IHM7CiAgICAgICAgfSk7CgogICAgICAgIHJldHVybiBpID4gLTEgPyBfdGhpcy5pbnRlcm5hbE9wdGlvbnMuc29ydERlc2NbaV0gOiBmYWxzZTsKICAgICAgfSk7CiAgICAgIHRoaXMudXBkYXRlT3B0aW9ucyh7CiAgICAgICAgc29ydEJ5OiBzb3J0QnksCiAgICAgICAgc29ydERlc2M6IHNvcnREZXNjCiAgICAgIH0pOwogICAgfSwKICAgIHVwZGF0ZU9wdGlvbnM6IGZ1bmN0aW9uIHVwZGF0ZU9wdGlvbnMob3B0aW9ucykgewogICAgICB0aGlzLmludGVybmFsT3B0aW9ucyA9IF9vYmplY3RTcHJlYWQoe30sIHRoaXMuaW50ZXJuYWxPcHRpb25zLCB7fSwgb3B0aW9ucywgewogICAgICAgIHBhZ2U6IHRoaXMuc2VydmVySXRlbXNMZW5ndGggPCAwID8gTWF0aC5tYXgoMSwgTWF0aC5taW4ob3B0aW9ucy5wYWdlIHx8IHRoaXMuaW50ZXJuYWxPcHRpb25zLnBhZ2UsIHRoaXMucGFnZUNvdW50KSkgOiBvcHRpb25zLnBhZ2UgfHwgdGhpcy5pbnRlcm5hbE9wdGlvbnMucGFnZQogICAgICB9KTsKICAgIH0sCiAgICBzb3J0SXRlbXM6IGZ1bmN0aW9uIHNvcnRJdGVtcyhpdGVtcykgewogICAgICB2YXIgc29ydEJ5ID0gW107CiAgICAgIHZhciBzb3J0RGVzYyA9IFtdOwoKICAgICAgaWYgKCF0aGlzLmRpc2FibGVTb3J0KSB7CiAgICAgICAgc29ydEJ5ID0gdGhpcy5pbnRlcm5hbE9wdGlvbnMuc29ydEJ5OwogICAgICAgIHNvcnREZXNjID0gdGhpcy5pbnRlcm5hbE9wdGlvbnMuc29ydERlc2M7CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLmludGVybmFsT3B0aW9ucy5ncm91cEJ5Lmxlbmd0aCkgewogICAgICAgIHNvcnRCeSA9IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5pbnRlcm5hbE9wdGlvbnMuZ3JvdXBCeSksIF90b0NvbnN1bWFibGVBcnJheShzb3J0QnkpKTsKICAgICAgICBzb3J0RGVzYyA9IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5pbnRlcm5hbE9wdGlvbnMuZ3JvdXBEZXNjKSwgX3RvQ29uc3VtYWJsZUFycmF5KHNvcnREZXNjKSk7CiAgICAgIH0KCiAgICAgIHJldHVybiB0aGlzLmN1c3RvbVNvcnQoaXRlbXMsIHNvcnRCeSwgc29ydERlc2MsIHRoaXMubG9jYWxlKTsKICAgIH0sCiAgICBncm91cEl0ZW1zOiBmdW5jdGlvbiBncm91cEl0ZW1zKGl0ZW1zKSB7CiAgICAgIHJldHVybiB0aGlzLmN1c3RvbUdyb3VwKGl0ZW1zLCB0aGlzLmludGVybmFsT3B0aW9ucy5ncm91cEJ5LCB0aGlzLmludGVybmFsT3B0aW9ucy5ncm91cERlc2MpOwogICAgfSwKICAgIHBhZ2luYXRlSXRlbXM6IGZ1bmN0aW9uIHBhZ2luYXRlSXRlbXMoaXRlbXMpIHsKICAgICAgLy8gTWFrZSBzdXJlIHdlIGRvbid0IHRyeSB0byBkaXNwbGF5IG5vbi1leGlzdGFudCBwYWdlIGlmIGl0ZW1zIHN1ZGRlbmx5IGNoYW5nZQogICAgICAvLyBUT0RPOiBDb3VsZCBwb3NzaWJseSBtb3ZlIHRoaXMgdG8gcGFnZVN0YXJ0L3BhZ2VTdG9wPwogICAgICBpZiAodGhpcy5zZXJ2ZXJJdGVtc0xlbmd0aCA9PT0gLTEgJiYgaXRlbXMubGVuZ3RoIDw9IHRoaXMucGFnZVN0YXJ0KSB7CiAgICAgICAgdGhpcy5pbnRlcm5hbE9wdGlvbnMucGFnZSA9IE1hdGgubWF4KDEsIE1hdGguY2VpbChpdGVtcy5sZW5ndGggLyB0aGlzLmludGVybmFsT3B0aW9ucy5pdGVtc1BlclBhZ2UpKSB8fCAxOyAvLyBQcmV2ZW50IE5hTgogICAgICB9CgogICAgICByZXR1cm4gaXRlbXMuc2xpY2UodGhpcy5wYWdlU3RhcnQsIHRoaXMucGFnZVN0b3ApOwogICAgfQogIH0sCiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoKSB7CiAgICByZXR1cm4gdGhpcy4kc2NvcGVkU2xvdHMuZGVmYXVsdCAmJiB0aGlzLiRzY29wZWRTbG90cy5kZWZhdWx0KHRoaXMuc2NvcGVkUHJvcHMpOwogIH0KfSk7"},null]}